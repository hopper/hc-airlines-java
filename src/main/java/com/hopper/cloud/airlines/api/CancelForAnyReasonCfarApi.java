/*
 * Airline API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hopper.cloud.airlines.api;

import com.hopper.cloud.airlines.ApiCallback;
import com.hopper.cloud.airlines.ApiClient;
import com.hopper.cloud.airlines.ApiException;
import com.hopper.cloud.airlines.ApiResponse;
import com.hopper.cloud.airlines.Configuration;
import com.hopper.cloud.airlines.Pair;
import com.hopper.cloud.airlines.ProgressRequestBody;
import com.hopper.cloud.airlines.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;


import com.hopper.cloud.airlines.model.BadRequest;
import com.hopper.cloud.airlines.model.CfarContract;
import com.hopper.cloud.airlines.model.CfarContractExercise;
import com.hopper.cloud.airlines.model.CfarOffer;
import com.hopper.cloud.airlines.model.CreateCfarContractExerciseRequest;
import com.hopper.cloud.airlines.model.CreateCfarContractRequest;
import com.hopper.cloud.airlines.model.CreateCfarOfferRequest;
import com.hopper.cloud.airlines.model.MarkCfarContractExerciseCompleteRequest;
import com.hopper.cloud.airlines.model.UnprocessableEntity;
import com.hopper.cloud.airlines.model.UpdateCfarContractRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import jakarta.ws.rs.core.GenericType;

public class CancelForAnyReasonCfarApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CancelForAnyReasonCfarApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CancelForAnyReasonCfarApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getCfarContractsId
     * @param id A unique identifier for a CFAR contract (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested CFAR contract </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid value for: header HC-Session-ID </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getCfarContractsIdCall(String id, String hcSessionID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/cfar_contracts/{id}"
            .replaceAll("\\{" + "id" + "\\}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (hcSessionID != null) {
            localVarHeaderParams.put("HC-Session-ID", localVarApiClient.parameterToString(hcSessionID));
        }

        final String[] localVarAccepts = {
            "application/json", "text/plain"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "PartnerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCfarContractsIdValidateBeforeCall(String id, String hcSessionID, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getCfarContractsId(Async)");
        }
        

        okhttp3.Call localVarCall = getCfarContractsIdCall(id, hcSessionID, _callback);
        return localVarCall;

    }

    /**
     * Get a CFAR Contract
     * Get a CFAR contract
     * @param id A unique identifier for a CFAR contract (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @return CfarContract
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested CFAR contract </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid value for: header HC-Session-ID </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public CfarContract getCfarContractsId(String id, String hcSessionID) throws ApiException {
        ApiResponse<CfarContract> localVarResp = getCfarContractsIdWithHttpInfo(id, hcSessionID);
        return localVarResp.getData();
    }

    /**
     * Get a CFAR Contract
     * Get a CFAR contract
     * @param id A unique identifier for a CFAR contract (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @return ApiResponse&lt;CfarContract&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested CFAR contract </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid value for: header HC-Session-ID </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CfarContract> getCfarContractsIdWithHttpInfo(String id, String hcSessionID) throws ApiException {
        okhttp3.Call localVarCall = getCfarContractsIdValidateBeforeCall(id, hcSessionID, null);
        Type localVarReturnType = new TypeToken<CfarContract>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a CFAR Contract (asynchronously)
     * Get a CFAR contract
     * @param id A unique identifier for a CFAR contract (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested CFAR contract </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid value for: header HC-Session-ID </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getCfarContractsIdAsync(String id, String hcSessionID, final ApiCallback<CfarContract> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCfarContractsIdValidateBeforeCall(id, hcSessionID, _callback);
        Type localVarReturnType = new TypeToken<CfarContract>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for postCfarContractExercises
     * @param createCfarContractExerciseRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created CFAR contract exercise </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postCfarContractExercisesCall(CreateCfarContractExerciseRequest createCfarContractExerciseRequest, String hcSessionID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createCfarContractExerciseRequest;

        // create path and map variables
        String localVarPath = "/cfar_contract_exercises";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (hcSessionID != null) {
            localVarHeaderParams.put("HC-Session-ID", localVarApiClient.parameterToString(hcSessionID));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "PartnerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postCfarContractExercisesValidateBeforeCall(CreateCfarContractExerciseRequest createCfarContractExerciseRequest, String hcSessionID, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'createCfarContractExerciseRequest' is set
        if (createCfarContractExerciseRequest == null) {
            throw new ApiException("Missing the required parameter 'createCfarContractExerciseRequest' when calling postCfarContractExercises(Async)");
        }
        

        okhttp3.Call localVarCall = postCfarContractExercisesCall(createCfarContractExerciseRequest, hcSessionID, _callback);
        return localVarCall;

    }

    /**
     * Create CFAR Exercise Request
     * Record that a request to exercise a CFAR contract has occurred
     * @param createCfarContractExerciseRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @return CfarContractExercise
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created CFAR contract exercise </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public CfarContractExercise postCfarContractExercises(CreateCfarContractExerciseRequest createCfarContractExerciseRequest, String hcSessionID) throws ApiException {
        ApiResponse<CfarContractExercise> localVarResp = postCfarContractExercisesWithHttpInfo(createCfarContractExerciseRequest, hcSessionID);
        return localVarResp.getData();
    }

    /**
     * Create CFAR Exercise Request
     * Record that a request to exercise a CFAR contract has occurred
     * @param createCfarContractExerciseRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @return ApiResponse&lt;CfarContractExercise&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created CFAR contract exercise </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CfarContractExercise> postCfarContractExercisesWithHttpInfo(CreateCfarContractExerciseRequest createCfarContractExerciseRequest, String hcSessionID) throws ApiException {
        okhttp3.Call localVarCall = postCfarContractExercisesValidateBeforeCall(createCfarContractExerciseRequest, hcSessionID, null);
        Type localVarReturnType = new TypeToken<CfarContractExercise>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create CFAR Exercise Request (asynchronously)
     * Record that a request to exercise a CFAR contract has occurred
     * @param createCfarContractExerciseRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created CFAR contract exercise </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postCfarContractExercisesAsync(CreateCfarContractExerciseRequest createCfarContractExerciseRequest, String hcSessionID, final ApiCallback<CfarContractExercise> _callback) throws ApiException {

        okhttp3.Call localVarCall = postCfarContractExercisesValidateBeforeCall(createCfarContractExerciseRequest, hcSessionID, _callback);
        Type localVarReturnType = new TypeToken<CfarContractExercise>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for postCfarContracts
     * @param createCfarContractRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param validateOnly When this flag is set to &#x60;true&#x60;, the CFAR contract creation will not be performed, it will only be validated (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created CFAR contract </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The CFAR contract creation request was successfully validated but not performed </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postCfarContractsCall(CreateCfarContractRequest createCfarContractRequest, String hcSessionID, Boolean validateOnly, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createCfarContractRequest;

        // create path and map variables
        String localVarPath = "/cfar_contracts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (validateOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("validate_only", validateOnly));
        }

        if (hcSessionID != null) {
            localVarHeaderParams.put("HC-Session-ID", localVarApiClient.parameterToString(hcSessionID));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "PartnerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postCfarContractsValidateBeforeCall(CreateCfarContractRequest createCfarContractRequest, String hcSessionID, Boolean validateOnly, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'createCfarContractRequest' is set
        if (createCfarContractRequest == null) {
            throw new ApiException("Missing the required parameter 'createCfarContractRequest' when calling postCfarContracts(Async)");
        }
        

        okhttp3.Call localVarCall = postCfarContractsCall(createCfarContractRequest, hcSessionID, validateOnly, _callback);
        return localVarCall;

    }

    /**
     * Create a CFAR Contract
     * Create a CFAR contract from a purchased CFAR offer
     * @param createCfarContractRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param validateOnly When this flag is set to &#x60;true&#x60;, the CFAR contract creation will not be performed, it will only be validated (optional, default to false)
     * @return CfarContract
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created CFAR contract </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The CFAR contract creation request was successfully validated but not performed </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public CfarContract postCfarContracts(CreateCfarContractRequest createCfarContractRequest, String hcSessionID, Boolean validateOnly) throws ApiException {
        ApiResponse<CfarContract> localVarResp = postCfarContractsWithHttpInfo(createCfarContractRequest, hcSessionID, validateOnly);
        return localVarResp.getData();
    }

    /**
     * Create a CFAR Contract
     * Create a CFAR contract from a purchased CFAR offer
     * @param createCfarContractRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param validateOnly When this flag is set to &#x60;true&#x60;, the CFAR contract creation will not be performed, it will only be validated (optional, default to false)
     * @return ApiResponse&lt;CfarContract&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created CFAR contract </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The CFAR contract creation request was successfully validated but not performed </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CfarContract> postCfarContractsWithHttpInfo(CreateCfarContractRequest createCfarContractRequest, String hcSessionID, Boolean validateOnly) throws ApiException {
        okhttp3.Call localVarCall = postCfarContractsValidateBeforeCall(createCfarContractRequest, hcSessionID, validateOnly, null);
        Type localVarReturnType = new TypeToken<CfarContract>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create a CFAR Contract (asynchronously)
     * Create a CFAR contract from a purchased CFAR offer
     * @param createCfarContractRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param validateOnly When this flag is set to &#x60;true&#x60;, the CFAR contract creation will not be performed, it will only be validated (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created CFAR contract </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The CFAR contract creation request was successfully validated but not performed </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postCfarContractsAsync(CreateCfarContractRequest createCfarContractRequest, String hcSessionID, Boolean validateOnly, final ApiCallback<CfarContract> _callback) throws ApiException {

        okhttp3.Call localVarCall = postCfarContractsValidateBeforeCall(createCfarContractRequest, hcSessionID, validateOnly, _callback);
        Type localVarReturnType = new TypeToken<CfarContract>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for postCfarOffers
     * @param createCfarOfferRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created CFAR offers </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postCfarOffersCall(CreateCfarOfferRequest createCfarOfferRequest, String hcSessionID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createCfarOfferRequest;

        // create path and map variables
        String localVarPath = "/cfar_offers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (hcSessionID != null) {
            localVarHeaderParams.put("HC-Session-ID", localVarApiClient.parameterToString(hcSessionID));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "PartnerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postCfarOffersValidateBeforeCall(CreateCfarOfferRequest createCfarOfferRequest, String hcSessionID, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'createCfarOfferRequest' is set
        if (createCfarOfferRequest == null) {
            throw new ApiException("Missing the required parameter 'createCfarOfferRequest' when calling postCfarOffers(Async)");
        }
        

        okhttp3.Call localVarCall = postCfarOffersCall(createCfarOfferRequest, hcSessionID, _callback);
        return localVarCall;

    }

    /**
     * Create a CFAR Offer
     * Create a CFAR offer for a user&#39;s trip
     * @param createCfarOfferRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @return List&lt;CfarOffer&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created CFAR offers </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public List<CfarOffer> postCfarOffers(CreateCfarOfferRequest createCfarOfferRequest, String hcSessionID) throws ApiException {
        ApiResponse<List<CfarOffer>> localVarResp = postCfarOffersWithHttpInfo(createCfarOfferRequest, hcSessionID);
        return localVarResp.getData();
    }

    /**
     * Create a CFAR Offer
     * Create a CFAR offer for a user&#39;s trip
     * @param createCfarOfferRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @return ApiResponse&lt;List&lt;CfarOffer&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created CFAR offers </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<CfarOffer>> postCfarOffersWithHttpInfo(CreateCfarOfferRequest createCfarOfferRequest, String hcSessionID) throws ApiException {
        okhttp3.Call localVarCall = postCfarOffersValidateBeforeCall(createCfarOfferRequest, hcSessionID, null);
        Type localVarReturnType = new TypeToken<List<CfarOffer>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create a CFAR Offer (asynchronously)
     * Create a CFAR offer for a user&#39;s trip
     * @param createCfarOfferRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> The created CFAR offers </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postCfarOffersAsync(CreateCfarOfferRequest createCfarOfferRequest, String hcSessionID, final ApiCallback<List<CfarOffer>> _callback) throws ApiException {

        okhttp3.Call localVarCall = postCfarOffersValidateBeforeCall(createCfarOfferRequest, hcSessionID, _callback);
        Type localVarReturnType = new TypeToken<List<CfarOffer>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for putCfarContractExercisesIdMarkCompleted
     * @param id A unique identifier for a CFAR contract exercise (required)
     * @param markCfarContractExerciseCompleteRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The updated CFAR contract exercise </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call putCfarContractExercisesIdMarkCompletedCall(String id, MarkCfarContractExerciseCompleteRequest markCfarContractExerciseCompleteRequest, String hcSessionID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = markCfarContractExerciseCompleteRequest;

        // create path and map variables
        String localVarPath = "/cfar_contract_exercises/{id}/mark_completed"
            .replaceAll("\\{" + "id" + "\\}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (hcSessionID != null) {
            localVarHeaderParams.put("HC-Session-ID", localVarApiClient.parameterToString(hcSessionID));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "PartnerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call putCfarContractExercisesIdMarkCompletedValidateBeforeCall(String id, MarkCfarContractExerciseCompleteRequest markCfarContractExerciseCompleteRequest, String hcSessionID, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling putCfarContractExercisesIdMarkCompleted(Async)");
        }
        
        // verify the required parameter 'markCfarContractExerciseCompleteRequest' is set
        if (markCfarContractExerciseCompleteRequest == null) {
            throw new ApiException("Missing the required parameter 'markCfarContractExerciseCompleteRequest' when calling putCfarContractExercisesIdMarkCompleted(Async)");
        }
        

        okhttp3.Call localVarCall = putCfarContractExercisesIdMarkCompletedCall(id, markCfarContractExerciseCompleteRequest, hcSessionID, _callback);
        return localVarCall;

    }

    /**
     * Complete CFAR Exercise
     * Record that a request to exercise a CFAR contract has been completed
     * @param id A unique identifier for a CFAR contract exercise (required)
     * @param markCfarContractExerciseCompleteRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @return CfarContractExercise
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The updated CFAR contract exercise </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public CfarContractExercise putCfarContractExercisesIdMarkCompleted(String id, MarkCfarContractExerciseCompleteRequest markCfarContractExerciseCompleteRequest, String hcSessionID) throws ApiException {
        ApiResponse<CfarContractExercise> localVarResp = putCfarContractExercisesIdMarkCompletedWithHttpInfo(id, markCfarContractExerciseCompleteRequest, hcSessionID);
        return localVarResp.getData();
    }

    /**
     * Complete CFAR Exercise
     * Record that a request to exercise a CFAR contract has been completed
     * @param id A unique identifier for a CFAR contract exercise (required)
     * @param markCfarContractExerciseCompleteRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @return ApiResponse&lt;CfarContractExercise&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The updated CFAR contract exercise </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CfarContractExercise> putCfarContractExercisesIdMarkCompletedWithHttpInfo(String id, MarkCfarContractExerciseCompleteRequest markCfarContractExerciseCompleteRequest, String hcSessionID) throws ApiException {
        okhttp3.Call localVarCall = putCfarContractExercisesIdMarkCompletedValidateBeforeCall(id, markCfarContractExerciseCompleteRequest, hcSessionID, null);
        Type localVarReturnType = new TypeToken<CfarContractExercise>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Complete CFAR Exercise (asynchronously)
     * Record that a request to exercise a CFAR contract has been completed
     * @param id A unique identifier for a CFAR contract exercise (required)
     * @param markCfarContractExerciseCompleteRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The updated CFAR contract exercise </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call putCfarContractExercisesIdMarkCompletedAsync(String id, MarkCfarContractExerciseCompleteRequest markCfarContractExerciseCompleteRequest, String hcSessionID, final ApiCallback<CfarContractExercise> _callback) throws ApiException {

        okhttp3.Call localVarCall = putCfarContractExercisesIdMarkCompletedValidateBeforeCall(id, markCfarContractExerciseCompleteRequest, hcSessionID, _callback);
        Type localVarReturnType = new TypeToken<CfarContractExercise>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for putCfarContractsIdUpdateStatus
     * @param id A unique identifier for a CFAR contract (required)
     * @param updateCfarContractRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The Updated CFAR contract </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The CFAR contract status update request was successfully validated but not performed </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call putCfarContractsIdUpdateStatusCall(String id, UpdateCfarContractRequest updateCfarContractRequest, String hcSessionID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = updateCfarContractRequest;

        // create path and map variables
        String localVarPath = "/cfar_contracts/{id}/update_status"
            .replaceAll("\\{" + "id" + "\\}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (hcSessionID != null) {
            localVarHeaderParams.put("HC-Session-ID", localVarApiClient.parameterToString(hcSessionID));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "PartnerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call putCfarContractsIdUpdateStatusValidateBeforeCall(String id, UpdateCfarContractRequest updateCfarContractRequest, String hcSessionID, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling putCfarContractsIdUpdateStatus(Async)");
        }
        
        // verify the required parameter 'updateCfarContractRequest' is set
        if (updateCfarContractRequest == null) {
            throw new ApiException("Missing the required parameter 'updateCfarContractRequest' when calling putCfarContractsIdUpdateStatus(Async)");
        }
        

        okhttp3.Call localVarCall = putCfarContractsIdUpdateStatusCall(id, updateCfarContractRequest, hcSessionID, _callback);
        return localVarCall;

    }

    /**
     * Update a CFAR Contract
     * Update the CFAR contract
     * @param id A unique identifier for a CFAR contract (required)
     * @param updateCfarContractRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @return CfarContract
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The Updated CFAR contract </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The CFAR contract status update request was successfully validated but not performed </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public CfarContract putCfarContractsIdUpdateStatus(String id, UpdateCfarContractRequest updateCfarContractRequest, String hcSessionID) throws ApiException {
        ApiResponse<CfarContract> localVarResp = putCfarContractsIdUpdateStatusWithHttpInfo(id, updateCfarContractRequest, hcSessionID);
        return localVarResp.getData();
    }

    /**
     * Update a CFAR Contract
     * Update the CFAR contract
     * @param id A unique identifier for a CFAR contract (required)
     * @param updateCfarContractRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @return ApiResponse&lt;CfarContract&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The Updated CFAR contract </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The CFAR contract status update request was successfully validated but not performed </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CfarContract> putCfarContractsIdUpdateStatusWithHttpInfo(String id, UpdateCfarContractRequest updateCfarContractRequest, String hcSessionID) throws ApiException {
        okhttp3.Call localVarCall = putCfarContractsIdUpdateStatusValidateBeforeCall(id, updateCfarContractRequest, hcSessionID, null);
        Type localVarReturnType = new TypeToken<CfarContract>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update a CFAR Contract (asynchronously)
     * Update the CFAR contract
     * @param id A unique identifier for a CFAR contract (required)
     * @param updateCfarContractRequest  (required)
     * @param hcSessionID The ID of the current airline session, see [Sessions](#tag/Sessions) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The Updated CFAR contract </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> The CFAR contract status update request was successfully validated but not performed </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Syntactic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The client could not be authenticated </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The authenticated client does not have permission to call this endpoint </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Semantic errors were encountered while handling the request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The server encountered an internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call putCfarContractsIdUpdateStatusAsync(String id, UpdateCfarContractRequest updateCfarContractRequest, String hcSessionID, final ApiCallback<CfarContract> _callback) throws ApiException {

        okhttp3.Call localVarCall = putCfarContractsIdUpdateStatusValidateBeforeCall(id, updateCfarContractRequest, hcSessionID, _callback);
        Type localVarReturnType = new TypeToken<CfarContract>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
