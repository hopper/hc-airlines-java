/*
 * Airline API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hopper.cloud.airlines.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;

import com.hopper.cloud.airlines.JSON;

/**
 * DgContents
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-02T18:35:20.974206513Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class DgContents {
  public static final String SERIALIZED_NAME_BULLET_POINTS = "bullet_points";
  @SerializedName(SERIALIZED_NAME_BULLET_POINTS)
  @javax.annotation.Nonnull
  private List<String> bulletPoints;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  @javax.annotation.Nonnull
  private Map<String, String> labels;

  public DgContents() {
  }

  public DgContents bulletPoints(@javax.annotation.Nonnull List<String> bulletPoints) {
    this.bulletPoints = bulletPoints;
    return this;
  }

  public DgContents addBulletPointsItem(String bulletPointsItem) {
    if (this.bulletPoints == null) {
      this.bulletPoints = new ArrayList<>();
    }
    this.bulletPoints.add(bulletPointsItem);
    return this;
  }

  /**
   * An array containing the bullet points to be displayed
   * @return bulletPoints
   */
  @javax.annotation.Nonnull
  public List<String> getBulletPoints() {
    return bulletPoints;
  }

  public void setBulletPoints(@javax.annotation.Nonnull List<String> bulletPoints) {
    this.bulletPoints = bulletPoints;
  }


  public DgContents labels(@javax.annotation.Nonnull Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public DgContents putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Get labels
   * @return labels
   */
  @javax.annotation.Nonnull
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(@javax.annotation.Nonnull Map<String, String> labels) {
    this.labels = labels;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DgContents dgContents = (DgContents) o;
    return Objects.equals(this.bulletPoints, dgContents.bulletPoints) &&
        Objects.equals(this.labels, dgContents.labels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bulletPoints, labels);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DgContents {\n");
    sb.append("    bulletPoints: ").append(toIndentedString(bulletPoints)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bullet_points");
    openapiFields.add("labels");
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DgContents.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DgContents' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DgContents> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DgContents.class));

       return (TypeAdapter<T>) new TypeAdapter<DgContents>() {
           @Override
           public void write(JsonWriter out, DgContents value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DgContents read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DgContents given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DgContents
   * @throws IOException if the JSON string is invalid with respect to DgContents
   */
  public static DgContents fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DgContents.class);
  }

  /**
   * Convert an instance of DgContents to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

