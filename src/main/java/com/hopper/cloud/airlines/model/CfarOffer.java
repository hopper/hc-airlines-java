/*
 * Airline API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hopper.cloud.airlines.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.hopper.cloud.airlines.JSON;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.*;
import java.util.Map.Entry;

/**
 * A successful CFAR offer response
 */
@ApiModel(description = "A successful CFAR offer response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T12:18:49.517876+02:00[Europe/Paris]")
public class CfarOffer {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PREMIUM = "premium";
  @SerializedName(SERIALIZED_NAME_PREMIUM)
  private String premium;

  public static final String SERIALIZED_NAME_COVERAGE = "coverage";
  @SerializedName(SERIALIZED_NAME_COVERAGE)
  private String coverage;

  public static final String SERIALIZED_NAME_COVERAGE_PERCENTAGE = "coverage_percentage";
  @SerializedName(SERIALIZED_NAME_COVERAGE_PERCENTAGE)
  private String coveragePercentage;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_TAXES_TOTAL = "taxes_total";
  @SerializedName(SERIALIZED_NAME_TAXES_TOTAL)
  private String taxesTotal;

  public static final String SERIALIZED_NAME_TAXES = "taxes";
  @SerializedName(SERIALIZED_NAME_TAXES)
  private List<CfarTax> taxes = new ArrayList<>();

  public static final String SERIALIZED_NAME_REQUEST_TYPE = "request_type";
  @SerializedName(SERIALIZED_NAME_REQUEST_TYPE)
  private RequestType requestType;

  public static final String SERIALIZED_NAME_TO_USD_EXCHANGE_RATE = "to_usd_exchange_rate";
  @SerializedName(SERIALIZED_NAME_TO_USD_EXCHANGE_RATE)
  private String toUsdExchangeRate;

  public static final String SERIALIZED_NAME_CONTRACT_EXPIRY_DATE_TIME = "contract_expiry_date_time";
  @SerializedName(SERIALIZED_NAME_CONTRACT_EXPIRY_DATE_TIME)
  private OffsetDateTime contractExpiryDateTime;

  public static final String SERIALIZED_NAME_CREATED_DATE_TIME = "created_date_time";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_TIME)
  private OffsetDateTime createdDateTime;

  public static final String SERIALIZED_NAME_ITINERARY = "itinerary";
  @SerializedName(SERIALIZED_NAME_ITINERARY)
  private CfarItinerary itinerary;

  public static final String SERIALIZED_NAME_OFFER_DESCRIPTION = "offer_description";
  @SerializedName(SERIALIZED_NAME_OFFER_DESCRIPTION)
  private Map<String, List<String>> offerDescription = new HashMap<>();

  public static final String SERIALIZED_NAME_EXT_ATTRIBUTES = "ext_attributes";
  @SerializedName(SERIALIZED_NAME_EXT_ATTRIBUTES)
  private Map<String, String> extAttributes = new HashMap<>();

  public CfarOffer() {
  }

  public CfarOffer id(String id) {

    this.id = id;
    return this;
  }

   /**
   * Unique identifier for an offer
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2e1006b3-aba6-4899-8682-b95bce693c27", required = true, value = "Unique identifier for an offer")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CfarOffer premium(String premium) {

    this.premium = premium;
    return this;
  }

   /**
   * Amount per passenger to be paid by user for CFAR
   * @return premium
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "20.80", required = true, value = "Amount per passenger to be paid by user for CFAR")

  public String getPremium() {
    return premium;
  }


  public void setPremium(String premium) {
    this.premium = premium;
  }


  public CfarOffer coverage(String coverage) {

    this.coverage = coverage;
    return this;
  }

   /**
   * Amount per passenger to be refunded to user upon CFAR exercise
   * @return coverage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "180.60", required = true, value = "Amount per passenger to be refunded to user upon CFAR exercise")

  public String getCoverage() {
    return coverage;
  }


  public void setCoverage(String coverage) {
    this.coverage = coverage;
  }


  public CfarOffer coveragePercentage(String coveragePercentage) {

    this.coveragePercentage = coveragePercentage;
    return this;
  }

  public String getTaxesTotal() {
    return taxesTotal;
  }

  public void setTaxesTotal(String taxesTotal) {
    this.taxesTotal = taxesTotal;
  }

  public CfarOffer taxes(List<CfarTax> taxes) {

    this.taxes = taxes;
    return this;
  }

  public CfarOffer addCfarTaxItem(CfarTax cfarTaxItem) {
    if (this.taxes != null) {
      this.taxes.add(cfarTaxItem);
    }
    return this;
  }

  public List<CfarTax> getTaxes() {
    return taxes;
  }

  public void setTaxes(List<CfarTax> taxes) {
    this.taxes = taxes;
  }

  /**
   * Percentage of the amount to be refunded to customer compared to flight tickets price
   * @return coveragePercentage
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "80.0", required = true, value = "Percentage of the amount to be refunded to customer compared to flight tickets price")

  public String getCoveragePercentage() {
    return coveragePercentage;
  }


  public void setCoveragePercentage(String coveragePercentage) {
    this.coveragePercentage = coveragePercentage;
  }


  public CfarOffer currency(String currency) {

    this.currency = currency;
    return this;
  }

   /**
   * Currency of offer
   * @return currency
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "CAD", required = true, value = "Currency of offer")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public CfarOffer requestType(RequestType requestType) {

    this.requestType = requestType;
    return this;
  }

   /**
   * Get requestType
   * @return requestType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public RequestType getRequestType() {
    return requestType;
  }


  public void setRequestType(RequestType requestType) {
    this.requestType = requestType;
  }


  public CfarOffer toUsdExchangeRate(String toUsdExchangeRate) {

    this.toUsdExchangeRate = toUsdExchangeRate;
    return this;
  }

   /**
   * USD Exchange rate for currency; amount * toUsdExchangeRate &#x3D;&#x3D; USD
   * @return toUsdExchangeRate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "0.79", required = true, value = "USD Exchange rate for currency; amount * toUsdExchangeRate == USD")

  public String getToUsdExchangeRate() {
    return toUsdExchangeRate;
  }


  public void setToUsdExchangeRate(String toUsdExchangeRate) {
    this.toUsdExchangeRate = toUsdExchangeRate;
  }


  public CfarOffer contractExpiryDateTime(OffsetDateTime contractExpiryDateTime) {

    this.contractExpiryDateTime = contractExpiryDateTime;
    return this;
  }

   /**
   * A UTC [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14) datetime; the date and time at which the CFAR contract will expire once purchased
   * @return contractExpiryDateTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2020-12-20T12:15:48Z", required = true, value = "A UTC [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14) datetime; the date and time at which the CFAR contract will expire once purchased")

  public OffsetDateTime getContractExpiryDateTime() {
    return contractExpiryDateTime;
  }


  public void setContractExpiryDateTime(OffsetDateTime contractExpiryDateTime) {
    this.contractExpiryDateTime = contractExpiryDateTime;
  }


  public CfarOffer createdDateTime(OffsetDateTime createdDateTime) {

    this.createdDateTime = createdDateTime;
    return this;
  }

   /**
   * A UTC [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14) datetime; the date and time at which a CFAR offer was created
   * @return createdDateTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2020-11-02T18:34:30Z", required = true, value = "A UTC [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14) datetime; the date and time at which a CFAR offer was created")

  public OffsetDateTime getCreatedDateTime() {
    return createdDateTime;
  }


  public void setCreatedDateTime(OffsetDateTime createdDateTime) {
    this.createdDateTime = createdDateTime;
  }


  public CfarOffer itinerary(CfarItinerary itinerary) {

    this.itinerary = itinerary;
    return this;
  }

   /**
   * Get itinerary
   * @return itinerary
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public CfarItinerary getItinerary() {
    return itinerary;
  }


  public void setItinerary(CfarItinerary itinerary) {
    this.itinerary = itinerary;
  }


  public CfarOffer offerDescription(Map<String, List<String>> offerDescription) {

    this.offerDescription = offerDescription;
    return this;
  }

  public CfarOffer putOfferDescriptionItem(String key, List<String> offerDescriptionItem) {
    this.offerDescription.put(key, offerDescriptionItem);
    return this;
  }

   /**
   * Get offerDescription
   * @return offerDescription
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Map<String, List<String>> getOfferDescription() {
    return offerDescription;
  }


  public void setOfferDescription(Map<String, List<String>> offerDescription) {
    this.offerDescription = offerDescription;
  }


  public CfarOffer extAttributes(Map<String, String> extAttributes) {

    this.extAttributes = extAttributes;
    return this;
  }

  public CfarOffer putExtAttributesItem(String key, String extAttributesItem) {
    this.extAttributes.put(key, extAttributesItem);
    return this;
  }

   /**
   * Get extAttributes
   * @return extAttributes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Map<String, String> getExtAttributes() {
    return extAttributes;
  }


  public void setExtAttributes(Map<String, String> extAttributes) {
    this.extAttributes = extAttributes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CfarOffer cfarOffer = (CfarOffer) o;
    return Objects.equals(this.id, cfarOffer.id) &&
        Objects.equals(this.premium, cfarOffer.premium) &&
        Objects.equals(this.coverage, cfarOffer.coverage) &&
        Objects.equals(this.coveragePercentage, cfarOffer.coveragePercentage) &&
        Objects.equals(this.currency, cfarOffer.currency) &&
        Objects.equals(this.taxesTotal, cfarOffer.taxesTotal) &&
        Objects.equals(this.taxes, cfarOffer.taxes) &&
        Objects.equals(this.requestType, cfarOffer.requestType) &&
        Objects.equals(this.toUsdExchangeRate, cfarOffer.toUsdExchangeRate) &&
        Objects.equals(this.contractExpiryDateTime, cfarOffer.contractExpiryDateTime) &&
        Objects.equals(this.createdDateTime, cfarOffer.createdDateTime) &&
        Objects.equals(this.itinerary, cfarOffer.itinerary) &&
        Objects.equals(this.offerDescription, cfarOffer.offerDescription) &&
        Objects.equals(this.extAttributes, cfarOffer.extAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, premium, coverage, coveragePercentage, currency, taxesTotal, taxes, requestType, toUsdExchangeRate, contractExpiryDateTime, createdDateTime, itinerary, offerDescription, extAttributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CfarOffer {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    premium: ").append(toIndentedString(premium)).append("\n");
    sb.append("    coverage: ").append(toIndentedString(coverage)).append("\n");
    sb.append("    coverage_percentage: ").append(toIndentedString(coveragePercentage)).append("\n");
    sb.append("    taxes_total: ").append(toIndentedString(taxesTotal)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    requestType: ").append(toIndentedString(requestType)).append("\n");
    sb.append("    toUsdExchangeRate: ").append(toIndentedString(toUsdExchangeRate)).append("\n");
    sb.append("    contractExpiryDateTime: ").append(toIndentedString(contractExpiryDateTime)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    itinerary: ").append(toIndentedString(itinerary)).append("\n");
    sb.append("    offerDescription: ").append(toIndentedString(offerDescription)).append("\n");
    sb.append("    extAttributes: ").append(toIndentedString(extAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("premium");
    openapiFields.add("coverage");
    openapiFields.add("coverage_percentage");
    openapiFields.add("taxes_total");
    openapiFields.add("taxes");
    openapiFields.add("currency");
    openapiFields.add("request_type");
    openapiFields.add("to_usd_exchange_rate");
    openapiFields.add("contract_expiry_date_time");
    openapiFields.add("created_date_time");
    openapiFields.add("itinerary");
    openapiFields.add("offer_description");
    openapiFields.add("ext_attributes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("premium");
    openapiRequiredFields.add("coverage");
    openapiRequiredFields.add("coverage_percentage");
    openapiRequiredFields.add("currency");
    openapiRequiredFields.add("request_type");
    openapiRequiredFields.add("to_usd_exchange_rate");
    openapiRequiredFields.add("contract_expiry_date_time");
    openapiRequiredFields.add("created_date_time");
    openapiRequiredFields.add("itinerary");
    openapiRequiredFields.add("offer_description");
    openapiRequiredFields.add("ext_attributes");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CfarOffer
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CfarOffer.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CfarOffer is not found in the empty JSON string", CfarOffer.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CfarOffer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CfarOffer` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CfarOffer.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonPrimitive() && !jsonObj.get("id").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("premium") != null && !jsonObj.get("premium").isJsonPrimitive() && !jsonObj.get("premium").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `premium` to be a primitive type in the JSON string but got `%s`", jsonObj.get("premium").toString()));
      }
      if (jsonObj.get("coverage") != null && !jsonObj.get("coverage").isJsonPrimitive() && !jsonObj.get("coverage").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `coverage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coverage").toString()));
      }
      if (jsonObj.get("taxes_total") != null && !jsonObj.get("taxes_total").isJsonPrimitive() && !jsonObj.get("taxes_total").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxes_total` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxes_total").toString()));
      }
      if (jsonObj.get("coverage_percentage") != null && !jsonObj.get("coverage_percentage").isJsonPrimitive() && !jsonObj.get("coverage_percentage").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `coverage_percentage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coverage_percentage").toString()));
      }
      if (jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonPrimitive() && !jsonObj.get("currency").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if (jsonObj.get("to_usd_exchange_rate") != null && !jsonObj.get("to_usd_exchange_rate").isJsonPrimitive() && !jsonObj.get("to_usd_exchange_rate").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `to_usd_exchange_rate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to_usd_exchange_rate").toString()));
      }
      // validate the optional field `itinerary`
      if (jsonObj.getAsJsonObject("itinerary") != null) {
        CfarItinerary.validateJsonObject(jsonObj.getAsJsonObject("itinerary"));
      }

      // validate the optional list `taxes`
      if (!jsonObj.get("taxes").isJsonNull()) {
        JsonArray jsonArrayTaxes = jsonObj.getAsJsonArray("taxes");
        if (jsonArrayTaxes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("taxes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `taxes` to be an array in the JSON string but got `%s`", jsonObj.get("taxes").toString()));
          }

          // validate the optional field `taxes` (array)
          for (int i = 0; i < jsonArrayTaxes.size(); i++) {
            CfarTax.validateJsonObject(jsonArrayTaxes.get(i).getAsJsonObject());
          }
          ;
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CfarOffer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CfarOffer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CfarOffer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CfarOffer.class));

       return (TypeAdapter<T>) new TypeAdapter<CfarOffer>() {
           @Override
           public void write(JsonWriter out, CfarOffer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CfarOffer read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CfarOffer given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CfarOffer
  * @throws IOException if the JSON string is invalid with respect to CfarOffer
  */
  public static CfarOffer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CfarOffer.class);
  }

 /**
  * Convert an instance of CfarOffer to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

