/*
 * Airline API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hopper.cloud.airlines.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.hopper.cloud.airlines.model.Device;
import com.hopper.cloud.airlines.model.UserInfo;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.hopper.cloud.airlines.JSON;

/**
 * An object containing information related to the user&#39;s session
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-02T18:35:20.974206513Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class CreateAirlineCfarSessionRequest {
  public static final String SERIALIZED_NAME_USER_INFO = "user_info";
  @SerializedName(SERIALIZED_NAME_USER_INFO)
  @javax.annotation.Nullable
  private UserInfo userInfo;

  public static final String SERIALIZED_NAME_DEVICE = "device";
  @SerializedName(SERIALIZED_NAME_DEVICE)
  @javax.annotation.Nullable
  private Device device;

  public static final String SERIALIZED_NAME_POINT_OF_SALE = "point_of_sale";
  @SerializedName(SERIALIZED_NAME_POINT_OF_SALE)
  @javax.annotation.Nonnull
  private String pointOfSale;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  @javax.annotation.Nonnull
  private String language;

  public CreateAirlineCfarSessionRequest() {
  }

  public CreateAirlineCfarSessionRequest userInfo(@javax.annotation.Nullable UserInfo userInfo) {
    this.userInfo = userInfo;
    return this;
  }

  /**
   * Get userInfo
   * @return userInfo
   */
  @javax.annotation.Nullable
  public UserInfo getUserInfo() {
    return userInfo;
  }

  public void setUserInfo(@javax.annotation.Nullable UserInfo userInfo) {
    this.userInfo = userInfo;
  }


  public CreateAirlineCfarSessionRequest device(@javax.annotation.Nullable Device device) {
    this.device = device;
    return this;
  }

  /**
   * Get device
   * @return device
   */
  @javax.annotation.Nullable
  public Device getDevice() {
    return device;
  }

  public void setDevice(@javax.annotation.Nullable Device device) {
    this.device = device;
  }


  public CreateAirlineCfarSessionRequest pointOfSale(@javax.annotation.Nonnull String pointOfSale) {
    this.pointOfSale = pointOfSale;
    return this;
  }

  /**
   * An ISO 3166-1-alpha-2 country code; the point of sale of the user
   * @return pointOfSale
   */
  @javax.annotation.Nonnull
  public String getPointOfSale() {
    return pointOfSale;
  }

  public void setPointOfSale(@javax.annotation.Nonnull String pointOfSale) {
    this.pointOfSale = pointOfSale;
  }


  public CreateAirlineCfarSessionRequest language(@javax.annotation.Nonnull String language) {
    this.language = language;
    return this;
  }

  /**
   * A ISO_639-1 country code; the language associated with the user
   * @return language
   */
  @javax.annotation.Nonnull
  public String getLanguage() {
    return language;
  }

  public void setLanguage(@javax.annotation.Nonnull String language) {
    this.language = language;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAirlineCfarSessionRequest createAirlineCfarSessionRequest = (CreateAirlineCfarSessionRequest) o;
    return Objects.equals(this.userInfo, createAirlineCfarSessionRequest.userInfo) &&
        Objects.equals(this.device, createAirlineCfarSessionRequest.device) &&
        Objects.equals(this.pointOfSale, createAirlineCfarSessionRequest.pointOfSale) &&
        Objects.equals(this.language, createAirlineCfarSessionRequest.language);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userInfo, device, pointOfSale, language);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAirlineCfarSessionRequest {\n");
    sb.append("    userInfo: ").append(toIndentedString(userInfo)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    pointOfSale: ").append(toIndentedString(pointOfSale)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("user_info");
    openapiFields.add("device");
    openapiFields.add("point_of_sale");
    openapiFields.add("language");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("point_of_sale");
    openapiRequiredFields.add("language");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAirlineCfarSessionRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAirlineCfarSessionRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAirlineCfarSessionRequest is not found in the empty JSON string", CreateAirlineCfarSessionRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAirlineCfarSessionRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAirlineCfarSessionRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateAirlineCfarSessionRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `user_info`
      if (jsonObj.get("user_info") != null && !jsonObj.get("user_info").isJsonNull()) {
        UserInfo.validateJsonElement(jsonObj.get("user_info"));
      }
      // validate the optional field `device`
      if (jsonObj.get("device") != null && !jsonObj.get("device").isJsonNull()) {
        Device.validateJsonElement(jsonObj.get("device"));
      }
      if (!jsonObj.get("point_of_sale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `point_of_sale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("point_of_sale").toString()));
      }
      if (!jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAirlineCfarSessionRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAirlineCfarSessionRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAirlineCfarSessionRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAirlineCfarSessionRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAirlineCfarSessionRequest>() {
           @Override
           public void write(JsonWriter out, CreateAirlineCfarSessionRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAirlineCfarSessionRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAirlineCfarSessionRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAirlineCfarSessionRequest
   * @throws IOException if the JSON string is invalid with respect to CreateAirlineCfarSessionRequest
   */
  public static CreateAirlineCfarSessionRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAirlineCfarSessionRequest.class);
  }

  /**
   * Convert an instance of CreateAirlineCfarSessionRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

