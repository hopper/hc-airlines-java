/*
 * Airline API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hopper.cloud.airlines.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.hopper.cloud.airlines.model.AirlineRefundMethod;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map.Entry;
import java.util.Set;

import com.hopper.cloud.airlines.JSON;

/**
 * An object containing exercise information for a contract
 */
@ApiModel(description = "An object containing exercise information for a contract")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-28T12:18:49.517876+02:00[Europe/Paris]")
public class CfarContractExercise {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CONTRACT_ID = "contract_id";
  @SerializedName(SERIALIZED_NAME_CONTRACT_ID)
  private String contractId;

  public static final String SERIALIZED_NAME_HOPPER_REFUND = "hopper_refund";
  @SerializedName(SERIALIZED_NAME_HOPPER_REFUND)
  private String hopperRefund;

  public static final String SERIALIZED_NAME_HOPPER_REFUND_METHOD = "hopper_refund_method";
  @SerializedName(SERIALIZED_NAME_HOPPER_REFUND_METHOD)
  private AirlineRefundMethod hopperRefundMethod;

  public static final String SERIALIZED_NAME_EXT_ATTRIBUTES = "ext_attributes";
  @SerializedName(SERIALIZED_NAME_EXT_ATTRIBUTES)
  private Map<String, String> extAttributes = new HashMap<>();

  public static final String SERIALIZED_NAME_AIRLINE_REFUND_ALLOWANCE = "airline_refund_allowance";
  @SerializedName(SERIALIZED_NAME_AIRLINE_REFUND_ALLOWANCE)
  private String airlineRefundAllowance;

  public static final String SERIALIZED_NAME_AIRLINE_REFUND_METHOD = "airline_refund_method";
  @SerializedName(SERIALIZED_NAME_AIRLINE_REFUND_METHOD)
  private AirlineRefundMethod airlineRefundMethod;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_REDIRECTION_TOKEN = "redirection_token";
  @SerializedName(SERIALIZED_REDIRECTION_TOKEN)
  private String redirectionToken;

  public CfarContractExercise() {
  }

  public CfarContractExercise id(String id) {

    this.id = id;
    return this;
  }

   /**
   * Unique identifier for a CFAR exercise
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "8ef454c6-74a5-48cf-972e-fac72d05e59c", required = true, value = "Unique identifier for a CFAR exercise")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CfarContractExercise contractId(String contractId) {

    this.contractId = contractId;
    return this;
  }

   /**
   * Unique identifier for a contract
   * @return contractId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "9f4f2f2b-adfd-4f02-83ad-da336ed57ce0", required = true, value = "Unique identifier for a contract")

  public String getContractId() {
    return contractId;
  }


  public void setContractId(String contractId) {
    this.contractId = contractId;
  }


  public CfarContractExercise hopperRefund(String hopperRefund) {

    this.hopperRefund = hopperRefund;
    return this;
  }

   /**
   * The partner&#39;s share of the amount refunded to the customer to complete the CFAR contract exercise
   * @return hopperRefund
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "123.45", required = true, value = "The partner's share of the amount refunded to the customer to complete the CFAR contract exercise")

  public String getHopperRefund() {
    return hopperRefund;
  }


  public void setHopperRefund(String hopperRefund) {
    this.hopperRefund = hopperRefund;
  }


  public CfarContractExercise hopperRefundMethod(AirlineRefundMethod hopperRefundMethod) {

    this.hopperRefundMethod = hopperRefundMethod;
    return this;
  }

   /**
   * Get hopperRefundMethod
   * @return hopperRefundMethod
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public AirlineRefundMethod getHopperRefundMethod() {
    return hopperRefundMethod;
  }


  public void setHopperRefundMethod(AirlineRefundMethod hopperRefundMethod) {
    this.hopperRefundMethod = hopperRefundMethod;
  }


  public CfarContractExercise extAttributes(Map<String, String> extAttributes) {

    this.extAttributes = extAttributes;
    return this;
  }

  public CfarContractExercise putExtAttributesItem(String key, String extAttributesItem) {
    this.extAttributes.put(key, extAttributesItem);
    return this;
  }

   /**
   * Get extAttributes
   * @return extAttributes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Map<String, String> getExtAttributes() {
    return extAttributes;
  }


  public void setExtAttributes(Map<String, String> extAttributes) {
    this.extAttributes = extAttributes;
  }


  public CfarContractExercise airlineRefundAllowance(String airlineRefundAllowance) {

    this.airlineRefundAllowance = airlineRefundAllowance;
    return this;
  }

   /**
   * Get airlineRefundAllowance
   * @return airlineRefundAllowance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAirlineRefundAllowance() {
    return airlineRefundAllowance;
  }


  public void setAirlineRefundAllowance(String airlineRefundAllowance) {
    this.airlineRefundAllowance = airlineRefundAllowance;
  }


  public CfarContractExercise airlineRefundMethod(AirlineRefundMethod airlineRefundMethod) {

    this.airlineRefundMethod = airlineRefundMethod;
    return this;
  }

   /**
   * Get airlineRefundMethod
   * @return airlineRefundMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AirlineRefundMethod getAirlineRefundMethod() {
    return airlineRefundMethod;
  }


  public void setAirlineRefundMethod(AirlineRefundMethod airlineRefundMethod) {
    this.airlineRefundMethod = airlineRefundMethod;
  }


  public CfarContractExercise currency(String currency) {

    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CAD", value = "")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CfarContractExercise redirectionToken(String redirectionToken) {

    this.redirectionToken = redirectionToken;
    return this;
  }


  public String getRedirectionToken() {
    return redirectionToken;
  }

  public void setRedirectionToken(String redirectionToken) {
    this.redirectionToken = redirectionToken;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CfarContractExercise cfarContractExercise = (CfarContractExercise) o;
    return Objects.equals(this.id, cfarContractExercise.id) &&
        Objects.equals(this.contractId, cfarContractExercise.contractId) &&
        Objects.equals(this.hopperRefund, cfarContractExercise.hopperRefund) &&
        Objects.equals(this.hopperRefundMethod, cfarContractExercise.hopperRefundMethod) &&
        Objects.equals(this.extAttributes, cfarContractExercise.extAttributes) &&
        Objects.equals(this.airlineRefundAllowance, cfarContractExercise.airlineRefundAllowance) &&
        Objects.equals(this.airlineRefundMethod, cfarContractExercise.airlineRefundMethod) &&
        Objects.equals(this.redirectionToken, cfarContractExercise.redirectionToken) &&
        Objects.equals(this.currency, cfarContractExercise.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, contractId, hopperRefund, hopperRefundMethod, extAttributes, airlineRefundAllowance, airlineRefundMethod, redirectionToken,currency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CfarContractExercise {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    contractId: ").append(toIndentedString(contractId)).append("\n");
    sb.append("    hopperRefund: ").append(toIndentedString(hopperRefund)).append("\n");
    sb.append("    hopperRefundMethod: ").append(toIndentedString(hopperRefundMethod)).append("\n");
    sb.append("    extAttributes: ").append(toIndentedString(extAttributes)).append("\n");
    sb.append("    airlineRefundAllowance: ").append(toIndentedString(airlineRefundAllowance)).append("\n");
    sb.append("    airlineRefundMethod: ").append(toIndentedString(airlineRefundMethod)).append("\n");
    sb.append("    redirectionToken: ").append(toIndentedString(redirectionToken)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("contract_id");
    openapiFields.add("exercise_initiated_date_time");
    openapiFields.add("exercise_completed_date_time");
    openapiFields.add("exchange_rate");
    openapiFields.add("hopper_refund");
    openapiFields.add("hopper_refund_method");
    openapiFields.add("ext_attributes");
    openapiFields.add("airline_refund_allowance");
    openapiFields.add("airline_refund_method");
    openapiFields.add("redirection_token");
    openapiFields.add("currency");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("contract_id");
    openapiRequiredFields.add("exercise_initiated_date_time");
    openapiRequiredFields.add("hopper_refund");
    openapiRequiredFields.add("hopper_refund_method");
    openapiRequiredFields.add("redirection_token");
    openapiRequiredFields.add("ext_attributes");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CfarContractExercise
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CfarContractExercise.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CfarContractExercise is not found in the empty JSON string", CfarContractExercise.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CfarContractExercise.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CfarContractExercise` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CfarContractExercise.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonPrimitive() && !jsonObj.get("id").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("contract_id") != null && !jsonObj.get("contract_id").isJsonPrimitive() && !jsonObj.get("contract_id").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `contract_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contract_id").toString()));
      }
      if (jsonObj.get("redirection_token") != null && !jsonObj.get("redirection_token").isJsonPrimitive() && !jsonObj.get("redirection_token").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `redirection_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redirection_token").toString()));
      }
      if (jsonObj.get("exchange_rate") != null && !jsonObj.get("exchange_rate").isJsonNull() && !jsonObj.get("exchange_rate").isJsonPrimitive() && !jsonObj.get("exchange_rate").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `exchange_rate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exchange_rate").toString()));
      }
      if (jsonObj.get("hopper_refund") != null && !jsonObj.get("hopper_refund").isJsonPrimitive() && !jsonObj.get("hopper_refund").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `hopper_refund` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hopper_refund").toString()));
      }
      if (jsonObj.get("airline_refund_allowance") != null && !jsonObj.get("airline_refund_allowance").isJsonPrimitive() && !jsonObj.get("airline_refund_allowance").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `airline_refund_allowance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("airline_refund_allowance").toString()));
      }
      if (jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonPrimitive() && !jsonObj.get("currency").isJsonNull()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CfarContractExercise.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CfarContractExercise' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CfarContractExercise> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CfarContractExercise.class));

       return (TypeAdapter<T>) new TypeAdapter<CfarContractExercise>() {
           @Override
           public void write(JsonWriter out, CfarContractExercise value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CfarContractExercise read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CfarContractExercise given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CfarContractExercise
  * @throws IOException if the JSON string is invalid with respect to CfarContractExercise
  */
  public static CfarContractExercise fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CfarContractExercise.class);
  }

 /**
  * Convert an instance of CfarContractExercise to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

