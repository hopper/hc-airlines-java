/*
 * Airline API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hopper.cloud.airlines.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;

import com.hopper.cloud.airlines.JSON;

/**
 * Update CFAR contract request
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-02T18:35:20.974206513Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class UpdateCfarContractRequest {
  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nonnull
  private CfarStatus status;

  public static final String SERIALIZED_NAME_PNR_REFERENCE = "pnr_reference";
  @SerializedName(SERIALIZED_NAME_PNR_REFERENCE)
  @javax.annotation.Nullable
  private String pnrReference;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "email_address";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  @javax.annotation.Nullable
  private String emailAddress;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  @javax.annotation.Nullable
  private String phoneNumber;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  @javax.annotation.Nullable
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  @javax.annotation.Nullable
  private String lastName;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "address_line1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  @javax.annotation.Nullable
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "address_line2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  @javax.annotation.Nullable
  private String addressLine2;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  @javax.annotation.Nullable
  private String city;

  public static final String SERIALIZED_NAME_STATE_OR_PROVINCE = "state_or_province";
  @SerializedName(SERIALIZED_NAME_STATE_OR_PROVINCE)
  @javax.annotation.Nullable
  private String stateOrProvince;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postal_code";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  @javax.annotation.Nullable
  private String postalCode;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  @javax.annotation.Nullable
  private String country;

  public static final String SERIALIZED_NAME_TAXES_TOTAL = "taxes_total";
  @SerializedName(SERIALIZED_NAME_TAXES_TOTAL)
  @javax.annotation.Nullable
  private String taxesTotal;

  public static final String SERIALIZED_NAME_TAXES = "taxes";
  @SerializedName(SERIALIZED_NAME_TAXES)
  @javax.annotation.Nullable
  private List<CfarTax> taxes;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  @javax.annotation.Nullable
  private String currency;

  public static final String SERIALIZED_NAME_EXCHANGE_RATE = "exchange_rate";
  @SerializedName(SERIALIZED_NAME_EXCHANGE_RATE)
  @javax.annotation.Nullable
  private String exchangeRate;

  public static final String SERIALIZED_NAME_TOTAL_PRICE = "total_price";
  @SerializedName(SERIALIZED_NAME_TOTAL_PRICE)
  @javax.annotation.Nullable
  private String totalPrice;

  public static final String SERIALIZED_NAME_FORMS_OF_PAYMENT = "forms_of_payment";
  @SerializedName(SERIALIZED_NAME_FORMS_OF_PAYMENT)
  @javax.annotation.Nullable
  private List<FormOfPayment> formsOfPayment;

  public UpdateCfarContractRequest() {
  }

  public UpdateCfarContractRequest status(@javax.annotation.Nonnull CfarStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public CfarStatus getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nonnull CfarStatus status) {
    this.status = status;
  }


  public UpdateCfarContractRequest pnrReference(@javax.annotation.Nullable String pnrReference) {
    this.pnrReference = pnrReference;
    return this;
  }

  /**
   * Reference of the PNR in the airline system.&lt;br/&gt;Mandatory only if new status is \&quot;confirmed\&quot;
   * @return pnrReference
   */
  @javax.annotation.Nullable
  public String getPnrReference() {
    return pnrReference;
  }

  public void setPnrReference(@javax.annotation.Nullable String pnrReference) {
    this.pnrReference = pnrReference;
  }


  public UpdateCfarContractRequest emailAddress(@javax.annotation.Nullable String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

  /**
   * Email address of the user
   * @return emailAddress
   */
  @javax.annotation.Nullable
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(@javax.annotation.Nullable String emailAddress) {
    this.emailAddress = emailAddress;
  }


  public UpdateCfarContractRequest phoneNumber(@javax.annotation.Nullable String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Phone number of the customer
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(@javax.annotation.Nullable String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public UpdateCfarContractRequest firstName(@javax.annotation.Nullable String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * First name of the cardholder
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(@javax.annotation.Nullable String firstName) {
    this.firstName = firstName;
  }


  public UpdateCfarContractRequest lastName(@javax.annotation.Nullable String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Last name of the cardholder
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(@javax.annotation.Nullable String lastName) {
    this.lastName = lastName;
  }


  public UpdateCfarContractRequest addressLine1(@javax.annotation.Nullable String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

  /**
   * Address of the cardholder (first line)
   * @return addressLine1
   */
  @javax.annotation.Nullable
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(@javax.annotation.Nullable String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public UpdateCfarContractRequest addressLine2(@javax.annotation.Nullable String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

  /**
   * Address of the cardholder (second line)
   * @return addressLine2
   */
  @javax.annotation.Nullable
  public String getAddressLine2() {
    return addressLine2;
  }

  public void setAddressLine2(@javax.annotation.Nullable String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public UpdateCfarContractRequest city(@javax.annotation.Nullable String city) {
    this.city = city;
    return this;
  }

  /**
   * City of the cardholder
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(@javax.annotation.Nullable String city) {
    this.city = city;
  }


  public UpdateCfarContractRequest stateOrProvince(@javax.annotation.Nullable String stateOrProvince) {
    this.stateOrProvince = stateOrProvince;
    return this;
  }

  /**
   * State or province of the cardholder
   * @return stateOrProvince
   */
  @javax.annotation.Nullable
  public String getStateOrProvince() {
    return stateOrProvince;
  }

  public void setStateOrProvince(@javax.annotation.Nullable String stateOrProvince) {
    this.stateOrProvince = stateOrProvince;
  }


  public UpdateCfarContractRequest postalCode(@javax.annotation.Nullable String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Postal code  of the cardholder
   * @return postalCode
   */
  @javax.annotation.Nullable
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(@javax.annotation.Nullable String postalCode) {
    this.postalCode = postalCode;
  }


  public UpdateCfarContractRequest country(@javax.annotation.Nullable String country) {
    this.country = country;
    return this;
  }

  /**
   * Country of the cardholder
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(@javax.annotation.Nullable String country) {
    this.country = country;
  }


  public UpdateCfarContractRequest taxesTotal(@javax.annotation.Nullable String taxesTotal) {
    this.taxesTotal = taxesTotal;
    return this;
  }

  /**
   * Total of taxes
   * @return taxesTotal
   */
  @javax.annotation.Nullable
  public String getTaxesTotal() {
    return taxesTotal;
  }

  public void setTaxesTotal(@javax.annotation.Nullable String taxesTotal) {
    this.taxesTotal = taxesTotal;
  }


  public UpdateCfarContractRequest taxes(@javax.annotation.Nullable List<CfarTax> taxes) {
    this.taxes = taxes;
    return this;
  }

  public UpdateCfarContractRequest addTaxesItem(CfarTax taxesItem) {
    if (this.taxes == null) {
      this.taxes = new ArrayList<>();
    }
    this.taxes.add(taxesItem);
    return this;
  }

  /**
   * List of taxes that is associated with a contract
   * @return taxes
   */
  @javax.annotation.Nullable
  public List<CfarTax> getTaxes() {
    return taxes;
  }

  public void setTaxes(@javax.annotation.Nullable List<CfarTax> taxes) {
    this.taxes = taxes;
  }


  public UpdateCfarContractRequest currency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Updated currency in case it has changed at payment time
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(@javax.annotation.Nullable String currency) {
    this.currency = currency;
  }


  public UpdateCfarContractRequest exchangeRate(@javax.annotation.Nullable String exchangeRate) {
    this.exchangeRate = exchangeRate;
    return this;
  }

  /**
   * Exchange rate applied provided by partner if currency has changed at payment time, for instance, if a contract is created in EUR and the customer chose to pay in CAD on the partner&#39;s website, the partner will send us their exchange rate value from EUR to CAD.
   * @return exchangeRate
   */
  @javax.annotation.Nullable
  public String getExchangeRate() {
    return exchangeRate;
  }

  public void setExchangeRate(@javax.annotation.Nullable String exchangeRate) {
    this.exchangeRate = exchangeRate;
  }


  public UpdateCfarContractRequest totalPrice(@javax.annotation.Nullable String totalPrice) {
    this.totalPrice = totalPrice;
    return this;
  }

  /**
   * Updated total price to be covered by CFAR in case it can change at payment time
   * @return totalPrice
   */
  @javax.annotation.Nullable
  public String getTotalPrice() {
    return totalPrice;
  }

  public void setTotalPrice(@javax.annotation.Nullable String totalPrice) {
    this.totalPrice = totalPrice;
  }


  public UpdateCfarContractRequest formsOfPayment(@javax.annotation.Nullable List<FormOfPayment> formsOfPayment) {
    this.formsOfPayment = formsOfPayment;
    return this;
  }

  public UpdateCfarContractRequest addFormsOfPaymentItem(FormOfPayment formsOfPaymentItem) {
    if (this.formsOfPayment == null) {
      this.formsOfPayment = new ArrayList<>();
    }
    this.formsOfPayment.add(formsOfPaymentItem);
    return this;
  }

  /**
   * List of the forms of payment used to purchase the booking
   * @return formsOfPayment
   */
  @javax.annotation.Nullable
  public List<FormOfPayment> getFormsOfPayment() {
    return formsOfPayment;
  }

  public void setFormsOfPayment(@javax.annotation.Nullable List<FormOfPayment> formsOfPayment) {
    this.formsOfPayment = formsOfPayment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateCfarContractRequest updateCfarContractRequest = (UpdateCfarContractRequest) o;
    return Objects.equals(this.status, updateCfarContractRequest.status) &&
        Objects.equals(this.pnrReference, updateCfarContractRequest.pnrReference) &&
        Objects.equals(this.emailAddress, updateCfarContractRequest.emailAddress) &&
        Objects.equals(this.phoneNumber, updateCfarContractRequest.phoneNumber) &&
        Objects.equals(this.firstName, updateCfarContractRequest.firstName) &&
        Objects.equals(this.lastName, updateCfarContractRequest.lastName) &&
        Objects.equals(this.addressLine1, updateCfarContractRequest.addressLine1) &&
        Objects.equals(this.addressLine2, updateCfarContractRequest.addressLine2) &&
        Objects.equals(this.city, updateCfarContractRequest.city) &&
        Objects.equals(this.stateOrProvince, updateCfarContractRequest.stateOrProvince) &&
        Objects.equals(this.postalCode, updateCfarContractRequest.postalCode) &&
        Objects.equals(this.country, updateCfarContractRequest.country) &&
        Objects.equals(this.taxesTotal, updateCfarContractRequest.taxesTotal) &&
        Objects.equals(this.taxes, updateCfarContractRequest.taxes) &&
        Objects.equals(this.currency, updateCfarContractRequest.currency) &&
        Objects.equals(this.exchangeRate, updateCfarContractRequest.exchangeRate) &&
        Objects.equals(this.totalPrice, updateCfarContractRequest.totalPrice) &&
        Objects.equals(this.formsOfPayment, updateCfarContractRequest.formsOfPayment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, pnrReference, emailAddress, phoneNumber, firstName, lastName, addressLine1, addressLine2, city, stateOrProvince, postalCode, country, taxesTotal, taxes, currency, exchangeRate, totalPrice, formsOfPayment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateCfarContractRequest {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    pnrReference: ").append(toIndentedString(pnrReference)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    stateOrProvince: ").append(toIndentedString(stateOrProvince)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    taxesTotal: ").append(toIndentedString(taxesTotal)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    formsOfPayment: ").append(toIndentedString(formsOfPayment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("status");
    openapiFields.add("pnr_reference");
    openapiFields.add("email_address");
    openapiFields.add("phone_number");
    openapiFields.add("first_name");
    openapiFields.add("last_name");
    openapiFields.add("address_line1");
    openapiFields.add("address_line2");
    openapiFields.add("city");
    openapiFields.add("state_or_province");
    openapiFields.add("postal_code");
    openapiFields.add("country");
    openapiFields.add("taxes_total");
    openapiFields.add("taxes");
    openapiFields.add("currency");
    openapiFields.add("exchange_rate");
    openapiFields.add("total_price");
    openapiFields.add("forms_of_payment");
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateCfarContractRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateCfarContractRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateCfarContractRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateCfarContractRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateCfarContractRequest>() {
           @Override
           public void write(JsonWriter out, UpdateCfarContractRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateCfarContractRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateCfarContractRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateCfarContractRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateCfarContractRequest
   */
  public static UpdateCfarContractRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateCfarContractRequest.class);
  }

  /**
   * Convert an instance of UpdateCfarContractRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

