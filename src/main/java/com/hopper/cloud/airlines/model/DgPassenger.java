/*
 * Airline API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hopper.cloud.airlines.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;

import com.hopper.cloud.airlines.JSON;

/**
 * An object detailing the Passenger Information
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-02T18:35:20.974206513Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class DgPassenger {
  public static final String SERIALIZED_NAME_PASSENGER_REFERENCE = "passenger_reference";
  @SerializedName(SERIALIZED_NAME_PASSENGER_REFERENCE)
  @javax.annotation.Nonnull
  private String passengerReference;

  public static final String SERIALIZED_NAME_PASSENGER_TYPE = "passenger_type";
  @SerializedName(SERIALIZED_NAME_PASSENGER_TYPE)
  @javax.annotation.Nonnull
  private DgPassengerType passengerType;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  @javax.annotation.Nullable
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  @javax.annotation.Nullable
  private String lastName;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "date_of_birth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  @javax.annotation.Nullable
  private LocalDate dateOfBirth;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  @javax.annotation.Nullable
  private Gender gender;

  public static final String SERIALIZED_NAME_PASSPORT_NUMBER = "passport_number";
  @SerializedName(SERIALIZED_NAME_PASSPORT_NUMBER)
  @javax.annotation.Nullable
  private String passportNumber;

  public static final String SERIALIZED_NAME_PASSPORT_COUNTRY_ISSUANCE = "passport_country_issuance";
  @SerializedName(SERIALIZED_NAME_PASSPORT_COUNTRY_ISSUANCE)
  @javax.annotation.Nullable
  private String passportCountryIssuance;

  public static final String SERIALIZED_NAME_PASSPORT_ISSUANCE_DATE = "passport_issuance_date";
  @SerializedName(SERIALIZED_NAME_PASSPORT_ISSUANCE_DATE)
  @javax.annotation.Nullable
  private LocalDate passportIssuanceDate;

  public static final String SERIALIZED_NAME_PASSPORT_EXPIRATION_DATE = "passport_expiration_date";
  @SerializedName(SERIALIZED_NAME_PASSPORT_EXPIRATION_DATE)
  @javax.annotation.Nullable
  private LocalDate passportExpirationDate;

  public static final String SERIALIZED_NAME_NATIONALITY = "nationality";
  @SerializedName(SERIALIZED_NAME_NATIONALITY)
  @javax.annotation.Nullable
  private String nationality;

  public DgPassenger() {
  }

  public DgPassenger passengerReference(@javax.annotation.Nonnull String passengerReference) {
    this.passengerReference = passengerReference;
    return this;
  }

  /**
   * Unique reference of the passenger
   * @return passengerReference
   */
  @javax.annotation.Nonnull
  public String getPassengerReference() {
    return passengerReference;
  }

  public void setPassengerReference(@javax.annotation.Nonnull String passengerReference) {
    this.passengerReference = passengerReference;
  }


  public DgPassenger passengerType(@javax.annotation.Nonnull DgPassengerType passengerType) {
    this.passengerType = passengerType;
    return this;
  }

  /**
   * Get passengerType
   * @return passengerType
   */
  @javax.annotation.Nonnull
  public DgPassengerType getPassengerType() {
    return passengerType;
  }

  public void setPassengerType(@javax.annotation.Nonnull DgPassengerType passengerType) {
    this.passengerType = passengerType;
  }


  public DgPassenger firstName(@javax.annotation.Nullable String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Ancillaries attached to the itinerary and their prices
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(@javax.annotation.Nullable String firstName) {
    this.firstName = firstName;
  }


  public DgPassenger lastName(@javax.annotation.Nullable String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Ancillaries attached to the itinerary and their prices
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(@javax.annotation.Nullable String lastName) {
    this.lastName = lastName;
  }


  public DgPassenger dateOfBirth(@javax.annotation.Nullable LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

  /**
   * The birth date in ISO Local Date format
   * @return dateOfBirth
   */
  @javax.annotation.Nullable
  public LocalDate getDateOfBirth() {
    return dateOfBirth;
  }

  public void setDateOfBirth(@javax.annotation.Nullable LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  public DgPassenger gender(@javax.annotation.Nullable Gender gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Get gender
   * @return gender
   */
  @javax.annotation.Nullable
  public Gender getGender() {
    return gender;
  }

  public void setGender(@javax.annotation.Nullable Gender gender) {
    this.gender = gender;
  }


  public DgPassenger passportNumber(@javax.annotation.Nullable String passportNumber) {
    this.passportNumber = passportNumber;
    return this;
  }

  /**
   * The passport number of the passenger
   * @return passportNumber
   */
  @javax.annotation.Nullable
  public String getPassportNumber() {
    return passportNumber;
  }

  public void setPassportNumber(@javax.annotation.Nullable String passportNumber) {
    this.passportNumber = passportNumber;
  }


  public DgPassenger passportCountryIssuance(@javax.annotation.Nullable String passportCountryIssuance) {
    this.passportCountryIssuance = passportCountryIssuance;
    return this;
  }

  /**
   * The country of issuance of the passenger&#39;s passport
   * @return passportCountryIssuance
   */
  @javax.annotation.Nullable
  public String getPassportCountryIssuance() {
    return passportCountryIssuance;
  }

  public void setPassportCountryIssuance(@javax.annotation.Nullable String passportCountryIssuance) {
    this.passportCountryIssuance = passportCountryIssuance;
  }


  public DgPassenger passportIssuanceDate(@javax.annotation.Nullable LocalDate passportIssuanceDate) {
    this.passportIssuanceDate = passportIssuanceDate;
    return this;
  }

  /**
   * The date of issuance of the passenger&#39;s passport
   * @return passportIssuanceDate
   */
  @javax.annotation.Nullable
  public LocalDate getPassportIssuanceDate() {
    return passportIssuanceDate;
  }

  public void setPassportIssuanceDate(@javax.annotation.Nullable LocalDate passportIssuanceDate) {
    this.passportIssuanceDate = passportIssuanceDate;
  }


  public DgPassenger passportExpirationDate(@javax.annotation.Nullable LocalDate passportExpirationDate) {
    this.passportExpirationDate = passportExpirationDate;
    return this;
  }

  /**
   * The passport expiration date of the passenger
   * @return passportExpirationDate
   */
  @javax.annotation.Nullable
  public LocalDate getPassportExpirationDate() {
    return passportExpirationDate;
  }

  public void setPassportExpirationDate(@javax.annotation.Nullable LocalDate passportExpirationDate) {
    this.passportExpirationDate = passportExpirationDate;
  }


  public DgPassenger nationality(@javax.annotation.Nullable String nationality) {
    this.nationality = nationality;
    return this;
  }

  /**
   * The nationality of the passenger (country code)
   * @return nationality
   */
  @javax.annotation.Nullable
  public String getNationality() {
    return nationality;
  }

  public void setNationality(@javax.annotation.Nullable String nationality) {
    this.nationality = nationality;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DgPassenger dgPassenger = (DgPassenger) o;
    return Objects.equals(this.passengerReference, dgPassenger.passengerReference) &&
        Objects.equals(this.passengerType, dgPassenger.passengerType) &&
        Objects.equals(this.firstName, dgPassenger.firstName) &&
        Objects.equals(this.lastName, dgPassenger.lastName) &&
        Objects.equals(this.dateOfBirth, dgPassenger.dateOfBirth) &&
        Objects.equals(this.gender, dgPassenger.gender) &&
        Objects.equals(this.passportNumber, dgPassenger.passportNumber) &&
        Objects.equals(this.passportCountryIssuance, dgPassenger.passportCountryIssuance) &&
        Objects.equals(this.passportIssuanceDate, dgPassenger.passportIssuanceDate) &&
        Objects.equals(this.passportExpirationDate, dgPassenger.passportExpirationDate) &&
        Objects.equals(this.nationality, dgPassenger.nationality);
  }

  @Override
  public int hashCode() {
    return Objects.hash(passengerReference, passengerType, firstName, lastName, dateOfBirth, gender, passportNumber, passportCountryIssuance, passportIssuanceDate, passportExpirationDate, nationality);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DgPassenger {\n");
    sb.append("    passengerReference: ").append(toIndentedString(passengerReference)).append("\n");
    sb.append("    passengerType: ").append(toIndentedString(passengerType)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    passportNumber: ").append(toIndentedString(passportNumber)).append("\n");
    sb.append("    passportCountryIssuance: ").append(toIndentedString(passportCountryIssuance)).append("\n");
    sb.append("    passportIssuanceDate: ").append(toIndentedString(passportIssuanceDate)).append("\n");
    sb.append("    passportExpirationDate: ").append(toIndentedString(passportExpirationDate)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("passenger_reference");
    openapiFields.add("passenger_type");
    openapiFields.add("first_name");
    openapiFields.add("last_name");
    openapiFields.add("date_of_birth");
    openapiFields.add("gender");
    openapiFields.add("passport_number");
    openapiFields.add("passport_country_issuance");
    openapiFields.add("passport_issuance_date");
    openapiFields.add("passport_expiration_date");
    openapiFields.add("nationality");
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DgPassenger.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DgPassenger' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DgPassenger> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DgPassenger.class));

       return (TypeAdapter<T>) new TypeAdapter<DgPassenger>() {
           @Override
           public void write(JsonWriter out, DgPassenger value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DgPassenger read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DgPassenger given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DgPassenger
   * @throws IOException if the JSON string is invalid with respect to DgPassenger
   */
  public static DgPassenger fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DgPassenger.class);
  }

  /**
   * Convert an instance of DgPassenger to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

